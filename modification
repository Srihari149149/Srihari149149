print("Analyzing sales data trends...")

# Helper functions
def compute_slope(group):
    if len(group) < 2:
        return np.nan
    X = group['month_ordinal'].values.reshape(-1, 1)
    y = group['Value'].values
    model = LinearRegression()
    model.fit(X, y)
    return model.coef_[0]

def compute_volume_slope(group):
    if len(group) < 2:
        return np.nan
    X = group['month_ordinal'].values.reshape(-1, 1)
    y = group['Volume'].values
    model = LinearRegression()
    model.fit(X, y)
    return model.coef_[0]

# Most recent 3 months
recent_months = sorted(sales_df['month'].unique())[-6:]
sales_3m = sales_df[sales_df['month'].isin(recent_months)]

# Dealer-level trend
dealer_trends = sales_3m.groupby('dealer_code').apply(compute_slope).reset_index(name='sales_slope')
dealer_volume_trends = sales_3m.groupby('dealer_code').apply(compute_volume_slope).reset_index(name='volume_slope')
dealer_trends = pd.merge(dealer_trends, dealer_volume_trends, on='dealer_code', how='left')

# Category-level trend
category_trends = sales_3m.groupby(['dealer_code', 'Product_Category']).apply(compute_slope).reset_index(name='sales_slope')
category_volume_trends = sales_3m.groupby(['dealer_code', 'Product_Category']).apply(compute_volume_slope).reset_index(name='volume_slope')
category_trends = pd.merge(category_trends, category_volume_trends, on=['dealer_code', 'Product_Category'], how='left')

# YoY Sales Growth
current_year = sales_df['year'].max()
prev_year = current_year - 1

dealer_sales_current = sales_df[sales_df['year'] == current_year].groupby('dealer_code')['Value'].sum().reset_index(name='current_sales')
dealer_sales_prev = sales_df[sales_df['year'] == prev_year].groupby('dealer_code')['Value'].sum().reset_index(name='prev_sales')
dealer_sales_yoy = pd.merge(dealer_sales_current, dealer_sales_prev, on='dealer_code', how='left')
dealer_sales_yoy['sales_yoy_growth'] = ((dealer_sales_yoy['current_sales'] - dealer_sales_yoy['prev_sales']) / dealer_sales_yoy['prev_sales'])
dealer_sales_yoy = dealer_sales_yoy.replace([np.inf, -np.inf], np.nan).dropna(subset=['sales_yoy_growth'])

# Category-level YoY
cat_sales_current = sales_df[sales_df['year'] == current_year].groupby(['dealer_code', 'Product_Category'])['Value'].sum().reset_index(name='current_sales')
cat_sales_prev = sales_df[sales_df['year'] == prev_year].groupby(['dealer_code', 'Product_Category'])['Value'].sum().reset_index(name='prev_sales')
cat_sales_yoy = pd.merge(cat_sales_current, cat_sales_prev, on=['dealer_code', 'Product_Category'], how='left')
cat_sales_yoy['sales_yoy_growth'] = ((cat_sales_yoy['current_sales'] - cat_sales_yoy['prev_sales']) / cat_sales_yoy['prev_sales'])
cat_sales_yoy = cat_sales_yoy.replace([np.inf, -np.inf], np.nan).dropna(subset=['sales_yoy_growth'])

print("Sales trends calculated.")
